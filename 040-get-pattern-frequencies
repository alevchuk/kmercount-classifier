#!/usr/bin/env ruby

PATTERN_FREQUENCIES = Hash.new(0)
ALPHABET = {}

if ARGV.size != 1 or !(ARGV[0] =~ /\A[0-9]+\Z/)
  STDERR.puts "USAGE: 004-get-pattern-frequencies <runlength>"
  exit 1
end

RUNLEN = ARGV[0].to_i

STDIN.each_line do |l|
  s = l.chomp.split("\t")[1]
  if s.nil?
    STDERR.puts "WARNING: s is nil on line #{STDIN.lineno}!"
    next
  end

  s.split('').uniq.each {|a| ALPHABET[a] = true}

  RUNLEN.times do |i|
    break if s.size <= i
    s[i..-1].scan(/#{'.' * RUNLEN}/).each {|a| PATTERN_FREQUENCIES[a] += 1}
  end
end

#ALPHABET.keys.each do |l1|
#  ALPHABET.keys.each do |l2|
#    ALPHABET.keys.each do |l3|
#      # This will look strange, but only because even if the Hash entry 
#      # does not exist it will still return the default 0.
#      PATTERN_FREQUENCIES["#{l1}#{l2}#{l3}"] = 
#        PATTERN_FREQUENCIES["#{l1}#{l2}#{l3}"]
#    end
#  end
#end

PATTERN_FREQUENCIES.sort{|x,y| x[1] <=> y[1]}.each {|k, v| puts "#{k}\t#{v}"}

